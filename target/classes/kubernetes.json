{
  "apiVersion" : "v1",
  "kind" : "Template",
  "labels" : { },
  "metadata" : {
    "annotations" : {
      "description" : "# Java Camel Spring Infinispan QuickStart\r\n\r\nThis quickstart run in a Java standalone container, using Spring with Apache Camel (Infinispan component)\r\n\r\nThis example uses a timer to trigger a message every 5th secondi, generating a random number and put this value in an Infinispan cache and then get this value.\r\n\r\nThis example is related to `infinispan-server` quickstart which must be up and running.\r\n\r\nYou should be able to see the operations looking at the logs of `infinispan-client`.\r\n\r\n### Building\r\n\r\nNavigate to the $IPAAS_QUICKSTART/quickstart/infinispan/infinispan-client/ folder and the example can be built with\r\n\r\n    mvn clean install\r\n\r\n### Running the example in fabric8\r\n\r\nIt is assumed a running Kubernetes platform is already running. If not you can find details how to [get started](http://fabric8.io/guide/getStarted/index.html).\r\n\r\nThe example can be built and deployed using a single goal:\r\n\r\n    mvn -Pf8-local-deploy\r\n\r\nWhen the example runs in fabric8, you can use the OpenShift client tool to inspect the status\r\n\r\nTo list all the running pods:\r\n\r\n    oc get pods\r\n\r\nThen find the name of the pod that runs this quickstart, and output the logs from the running pods with:\r\n\r\n    oc logs <name of pod>\r\n\r\nYou can also use the fabric8 [web console](http://fabric8.io/guide/console.html) to manage the\r\nrunning pods, and view logs and much more.\r\n\r\n\r\n### More details\r\n\r\nYou can find more details about running this [quickstart](http://fabric8.io/guide/quickstarts/running.html) on the website. This also includes instructions how to change the Docker image user and registry.\r\n\r\n",
      "fabric8.postpaid/summary" : "Camel route using Spring XML and Infinispan in a standalone Java container",
      "fabric8.postpaid/iconUrl" : "img/icons/camel.svg"
    },
    "labels" : { },
    "name" : "postpaid"
  },
  "objects" : [ {
    "apiVersion" : "v1",
    "kind" : "Service",
    "metadata" : {
      "annotations" : {
        "fabric8.io/iconUrl" : "img/icons/camel.svg",
        "prometheus.io/port" : "9779",
        "prometheus.io/scrape" : "true"
      },
      "labels" : {
        "project" : "postpaid",
        "provider" : "fabric8",
        "version" : "v1",
        "group" : "quickstarts"
      },
      "name" : "postpaid"
    },
    "spec" : {
      "clusterIP" : "None",
      "deprecatedPublicIPs" : [ ],
      "externalIPs" : [ ],
      "ports" : [ {
        "port" : 9779,
        "targetPort" : 9779
      } ],
      "selector" : {
        "project" : "postpaid",
        "provider" : "fabric8",
        "group" : "quickstarts"
      }
    }
  }, {
    "apiVersion" : "v1",
    "kind" : "ReplicationController",
    "metadata" : {
      "annotations" : {
        "fabric8.io/iconUrl" : "img/icons/camel.svg"
      },
      "labels" : {
        "project" : "postpaid",
        "provider" : "fabric8",
        "version" : "v1",
        "group" : "quickstarts"
      },
      "name" : "postpaid"
    },
    "spec" : {
      "replicas" : 1,
      "selector" : {
        "project" : "postpaid",
        "provider" : "fabric8",
        "version" : "v1",
        "group" : "quickstarts"
      },
      "template" : {
        "metadata" : {
          "annotations" : { },
          "labels" : {
            "project" : "postpaid",
            "provider" : "fabric8",
            "version" : "v1",
            "group" : "quickstarts"
          }
        },
        "spec" : {
          "containers" : [ {
            "args" : [ ],
            "command" : [ ],
            "env" : [ {
              "name" : "KUBERNETES_NAMESPACE",
              "valueFrom" : {
                "fieldRef" : {
                  "fieldPath" : "metadata.namespace"
                }
              }
            } ],
            "image" : "fabric8/postpaid:v1",
            "name" : "postpaid",
            "ports" : [ {
              "containerPort" : 8778,
              "name" : "jolokia"
            } ],
            "securityContext" : { },
            "volumeMounts" : [ ]
          } ],
          "imagePullSecrets" : [ ],
          "nodeSelector" : { },
          "volumes" : [ ]
        }
      }
    }
  } ],
  "parameters" : [ ]
}